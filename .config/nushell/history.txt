ls
exit
ls
exit
cd
exit
zoxide init nushell | save -f ~/.zoxide.nu<\n>
z
ls ~/.zoxide.nu<\n>
exit
mkdir ~/.cache/carapace<\n>carapace _carapace nushell | save -f ~/.cache/carapace/init.nu<\n>
ls ~/.cache/carapace/init.nu<\n>
exit
sudo pacman -S atuin<\n>
atuin init nu | save -f ~/.local/share/atuin/init.nu<\n>
mkdir ~/.local/share/atuin<\n>
atuin init nu | save -f ~/.local/share/atuin/init.nu<\n>
ls ~/.local/share/atuin/init.nu<\n>
exit
mkdir -p ~/.cache/starship<\n>
mkdir ~/.cache/starship<\n>z
mkdir ~/.cache/starshi
starship init nu | save -f ~/.cache/starship/init.nu<\n>
source ~/.cache/starship/init.nu<\n>
# use ~/.config/bash-env.nu<\n>
exit
nu
# ~/.config/bash-env.nu<\n><\n>export-env {<\n>  let-env MY_CUSTOM_VAR = "valor"<\n>  let-env PATH = ($env.PATH | append '/ruta/adicional')<\n>}<\n>
export-env {<\n>  $env.MY_CUSTOM_VAR = "valor"<\n>  $env.PATH = ($env.PATH | append '/ruta/adicional')<\n>}<\n>
use ~/.config/bash-env.nu<\n>
exit
nu
hol
3000
docker ps -a
t
exit
nu
exit
nvim ~/.config/bash-env.nu<\n>
exit
nu
ls
node -- version
node --v
npm -v
ls
exit
las
ls
zellij
ls
exit
~/.config/zellij/config.kdl<\n>
cd ~/.config/zellij/
ls
nvim
nvim config.kdl 
exit
nu
cd ~
nvim .bashrc 
nvim ~/.local/bin/env 
sl
ls
exit
nu
ls
cd ~
cd ~/WorkSpace/Project/Di3go0-0_Dots/
cd ~
z Di3go0-0_dots
ls
cd ~/WorkSpace/Project/
ls
ls -a
cd Di3go0-0_Dots/
sl
ls
ls -a
ps -p $$<\n>
exit
ls
ls WorkSpace/Project/
cd WorkSpace
ls
l
ls
nvim
cd ..
cd WorkSpace/Project/scripts/
ls
./openconnect.sh
nvim 
./openconnect.sh
nvim
./openconnect.sh
nvim
./openconnect.sh
nvim openconnect.sh 
cd WorkSpace/Project/scripts/
cd ~
cd WorkSpace/Project/scripts
z scripts
z scrtips
z scripts
z Project
ls
git clone http://d.rincon:threedaysgrace14@10.1.1.197:32781/Cristdar/core-back-cristhian
cd core-back-cristhian/
cd ..
ls
mv core-back-cristhian/ query-builder/
cd query-builder/
z query-builder
nvim
cd api
npm i
z query-builder
nvim
cd WorkSpace/Project/budget-needs/
nvim
cp -r api/src/modules/material-needs/ ../query-builder/api/src/modules/
npm run start 
z query-builder
nvim
z query-builder
cd api
npm run start 
npm run start:dev
sudo lsof -i :3010
kill -9 185957
nvim
npm run start:dev
z query-builder
cd api
z query-builder
z decanos
cd WorkSpace/Project/decanos/
cd ~
z decanos
ls
nvim
z query-builder
nvim
z Desktop/
z decanos
npm run start:dev
ls
ls -a
nvim .gitconfig 
ls
cd WorkSpace/Project/budget-needs/
nvim
z Project
ls
git clone https://github.com/FStanDev/nvimipad
gh repo create ipad_dots --public
cd nvimipad/
ls
cd ..
ls
gh repo create ipad_dots --public
gh repo clone ipad_dots
cd ipad_dots/
cd ..
cd nvimipad/
ls
cp alpine_setup.sh ../ipad_dots/
cp nvim_config.tar.gz ../ipad_dots/
cd ..
ls
cd ipad_dots/
nvium
ls
tar -xzvf nvim_config.tar.gz 
ls
ls -a
rm -rf nvim_config.tar.gz
ls
ls -a
z Di3go0-0_dots
ls
nvim
cd ..
cd ipad_dots/
ls
nvim
z scripts
ls
z decanos
cd api
z Desktop/
z decano
ls
cd app
ng serve
npm run start:dev
./openconnect.sh
z Di3go0-0_dots
nvim
nano ~/.config/nushell/env.nu
source ~/.config/nushell/env.nu<\n>
nvim
ls
git 
zellij
cd ~/.config/nushell/
ls
cd ~/.config/nushell/
nvim
zellij
nvim
zellij
nvim
cd ~/.config/nushell/
cd ..
nvim
nvimm
nvim
~/.local/share/nvim/lazy/avante.nvim<\n>
sudo cd ~/.local/share/nvim/lazy/avante.nvim<\n>
~/.local/share/nvim/lazy/avante.nvim<\n>
cd ~/.local/share/nvim/lazy/avante.nvim<\n>v
cd ~/.local/share/nvim/lazy/avante.nvim<\n>
nvim --headless -c 'AvanteBuild' -c 'qa'<\n>
ls avante_templates<\n>
cd ~/.local/share/nvim/lazy/avante.nvim<\n>
cargo run -- build<\n>
rm -rf ~/.local/share/nvim/lazy/avante.nvim<\n>
sudo rm -rf ~/.local/share/nvim/lazy/avante.nvim<\n>
nvim
git clone --branch v0.1.0 https://github.com/avante-nvim/avante.nvim ~/.local/share/nvim/lazy/avante.nvim<\n>
sudo git clone --branch v0.1.0 https://github.com/avante-nvim/avante.nvim ~/.local/share/nvim/lazy/avante.nvim<\n>
ls ~/.local/share/nvim/lazy/avante.nvim/avante_templates<\n>
rm -rf ~/.local/share/nvim/lazy/avante.nvim<\n>
git clone --branch v0.1.0 https://github.com/avante-nvim/avante.nvim ~/.local/share/nvim/lazy/avante.nvim<\n>
gh repo clone lazy/avante.nvim
avante
nvim
cd ~/.local/share/nvim/lazy/avante.nvim<\n>
nvim --headless -c 'lua require("avante.build").build()' -c 'qa'<\n>
rm -rf ~/.local/share/nvim/lazy/avante.nvim<\n>
nvim
# Instalar Rust y cargo<\n>sudo pacman -S --needed rustup<\n>rustup default stable<\n>
sudo pacman -S --needed base-devel cmake git<\n>
sudo pacman -S --needed lua lua51 lua-lpeg luarocks<\n>
cd ~/.local/share/nvim/lazy/avante.nvim
nvim --headless -c 'lua require("avante.build").build()' -c 'qa'
:lua require("avante.build").build()<\n>
cd ~/.local/share/nvim/lazy/avante.nvim<\n>git pull<\n>
:AvanteInstall<\n>
nvim
cat ~/.local/share/nvim/lazy/avante.nvim/Makefile | less<\n>
cd ~/.local/share/nvim/lazy/avante.nvim<\n>
make BUILD_FROM_SOURCE=true<\n>
ls ~/.local/share/nvim/lazy/avante.nvim/avante_templates<\n>
make: cargo: No such file or directory<\n>
sudo pacman -S --needed rust<\n>
sudo pacman -S --needed rust
cd ~/.local/share/nvim/lazy/avante.nvim<\n>make BUILD_FROM_SOURCE=true<\n>
ls ~/.local/share/nvim/lazy/avante.nvim/avante_templates<\n>
grep -A5 avante_templates ~/.local/share/nvim/lazy/avante.nvim/Makefile<\n>
cat ~/.local/share/nvim/lazy/avante.nvim/Makefile | less<\n>
make BUILD_FROM_SOURCE=true<\n>
make templates<\n>
make install<\n>
cd ~/.local/share/nvim/lazy/avante.nvim<\n>make<\n>
nvim
z Di3go0-0_dots
cd Di3go0-0_Dots/
ls
nvim
git add .
git commit -m "hola"
git config --global user.email "Di3go0-0"
git config --global user.email "d.rincon@utp.edu.co"
git config --global user.name "Di3go0-0"
nvim
ls
ls -a
hyprctl reload<\n>
hyprctl reload
nvim
z Di3go0-0_dots
cd Di3go0-0_Dots/
nvim
hyprctl reload
nvim
cd ..
sudo pacman -S wlogout
yay -S wlogout<\n>
nvim
hyprctl reload
sudo pacman -S hyprpaper<\n>
exec-once = hyprpaper wallpaper /ruta/a/tu/wallpaper.jpg fill<\n>
nvim
cd di3go0-0_dots/
sudo pacman -S ttf-iosevka-nerd<\n>
V
mkdir -p ~/.local/share/fonts<\n>
mkdir ~/.local/share/fonts<\n>
cd ~/.local/share/fonts<\n>wget https://github.com/ryanoasis/nerd-fonts/releases/download/v3.1.1/Iosevka.zip<\n>
unzip Iosevka.zip<\n>rm Iosevka.zip<\n>
fc-cache -fv<\n>
fc-list | grep Iosevka<\n>
kitty --debug-font-fallback<\n>
mkdir -p ~/.local/share/fonts<\n>
mkdir ~/.local/share/fonts
cp DankMono*.ttf ~/.local/share/fonts/<\n>
fc-list | grep "DankMono"<\n>
waybar 
ls
nvim
ls
nvim
echo -e "Normal \033[1mBold\033[0m \033[3mItalic\033[0m \033[1;3mBold+Italic\033[0m"<\n>
sudo pacman -S hyprlock
yay -S hyprland-walker<\n>
yay -S hyprland-walker
hyprctl reload
nvim
nvi
mnvim
yay -S hyprland-walker
walker
yay -S hyprland-walker
which walker<\n>
walker<\n>
hyprctl dispatch exec walker<\n>
yay -S walker<\n>
hyprctl dispatch exec walker
walker 
nvim
z Di3go0-0_dots
# Agregar al inicio de tu config.fish o config.nu<\n>zoxide init nu | save ~/.config/nushell/config.nu<\n>
zoxide init nu | each { nu source $it }
nvim
sudo pacman -Syu
nvidia-smi
nvidia-msi
sudo pacman -Syu
z Di3go0-0_dots
zoxide init nushell --cmd cd | save -f ~/.zoxide.nu
l
l# Esto a√±ade las funciones de zoxide a Nushell<\n>zoxide init nu | each { nu source $it }<\n>
zoxide init nushell | save -f ~/.zoxide.nu<\n>
source ~/.zoxide.nu<\n>
cd Di3go0-0_Dots/
z Di3go0-0_dots
ls
nvim
ls
nvim
starship
nvim
starship
exit
nu
exit
nu
exit
exti
starship
exit
nvim
sudo pacman -S startship
sudo yay -S startship
nvim
use ~/.cache/starship/init.nu<\n>
source ~/.cache/starship/init.nu<\n>
mkdir ~/.cache/starship<\n>
starship init nu | save -f ~/.cache/starship/init.nu<\n>
use ~/.cache/starship/init.nu<\n>
source ~/.zoxide.nu<\n>source ~/.cache/carapace/init.nu<\n>
starship --version<\n>
starship prompt<\n>
eval "$(starship init bash)"<\n>
eval "$(starship init zsh)"<\n>
ls
nvim
cd ~/.config/
ls
nvim
pkill hyprpaper && hyprpaper &
nvim
neofetch
sudo pacman -S neofetch
sudo yay -S neofectch
neofetch
lspci | grep -E "VGA|3D"<\n>
sudo pacman -Syu<\n>sudo pacman -S nvidia nvidia-utils nvidia-settings nvidia-prime<\n>
nvidia-smi<\n>
nvidia-smi
lsmod | grep nvidia<\n>
sudo pacman -S nvidia nvidia-utils nvidia-settings nvidia-prime<\n>
sudo modprobe nvidia<\n>
lsmod | grep nvidia<\n>nvidia-smi<\n>
__NV_PRIME_RENDER_OFFLOAD=1 __GLX_VENDOR_LIBRARY_NAME=nvidia glxinfo | grep "OpenGL renderer"<\n>
sudo pacman -S mesa-utils<\n>
bash -c "__NV_PRIME_RENDER_OFFLOAD=1 __GLX_VENDOR_LIBRARY_NAME=nvidia glxinfo | grep 'OpenGL renderer'"<\n>
sudo pacman -S mesa-utils<\n>
bash -c "__NV_PRIME_RENDER_OFFLOAD=1 __GLX_VENDOR_LIBRARY_NAME=nvidia glxinfo | grep 'OpenGL renderer'"<\n>
bash -c "__NV_PRIME_RENDER_OFFLOAD=1 __GLX_VENDOR_LIBRARY_NAME=nvidia __VK_LAYER_NV_optimus=NVIDIA_only programa"<\n>
bash -c "__NV_PRIME_RENDER_OFFLOAD=1 __GLX_VENDOR_LIBRARY_NAME=nvidia __VK_LAYER_NV_optimus=NVIDIA_only nvim"
nvidia-smi
xrandr<\n>
prime-run glxgears<\n>
nvim
sudo pacman -Rns nvidia nvidia-utils nvidia-settings<\n>
sudo pacman -Rns nvidia-dkms<\n>
sudo pacman -Rns nvidia nvidia-utils nvidia-settings nvidia-prime<\n>
nvidia
nvidia-prime
nvidia-utils
sudo pacman -S pavucontrol networkmanager alacritty<\n>
killall waybar && waybar<\n>
waybar
killall waybar && waybar
killall waybar; waybar<\n>
waybar
sudo pacman -S wireplumber<\n>
waybar
pipewire-pulse 
sudo pacman -S pipewire pipewire-pulse wireplumber pavucontrol<\n>
sudo pacman -S mesa xf86-video-nouveau<\n>
lsmod | grep nouveau<\n>
nouveau 123456 ...<\n>
glxinfo | grep "OpenGL renderer"<\n>
nvidia-msi
sudo pacman -S mesa xf86-video-nouveau<\n>
sudo mkinitcpio -P<\n>
sudo pacman -S nvidia nvidia-utils nvidia-settings<\n>
which nvidia-msi<\n>nvidia-msi --help<\n>
nvidia-smi<\n>nvidia-settings<\n>
sudo pacman -S nvidia nvidia-utils nvidia-settings<\n>
sudo mkinitcpio -P<\n>
sudo reboot<\n>
waybar
nvidia-smi<\n>nvidia-settings<\n>
nvidia-smi
nvim
z Di3go0-0_dots
nvim
cha
chmod +x ~/.config/hypr/scripts/hypr-smart-focus.sh<\n>
nvim
mkdir Workspace
cd Workspace/
ls
cd Projects
mkdir Projects
cd Po
cd Projects/
ls
git clone https://github.com/CrisGO0510/My-Hyprland-Dotfiles/
ls
cd my
cd My-Hyprland-Dotfiles/
ls
ls -a
cd .config/
ls
cp -r hypr/ ~/di3go0-0_dots/.config/
nvim
cliphist<\n>
sudo pacman -S --needed git base-devel<\n>git clone https://aur.archlinux.org/yay.git<\n>cd yay<\n>makepkg -si<\n>
yay -S cliphist<\n>
cliphist
cliphist<\n>
cliphist -l       # listar historial
usage:<\n>  $ /usr/bin/cliphist <store|list|decode|delete|delete-query|wipe|version><\n>options:<\n>  -config-path (default /home/diego/.config/cliphist/config)<\n>    overwrite config path to use instead of cli flags<\n>  -db-path (default /home/diego/.cache/cliphist/db)<\n>    path to db<\n>  -max-dedupe-search (default 100)<\n>    maximum number of last items to look through when finding duplicates<\n>  -max-items (default 750)<\n>    maximum number of items to store<\n>  -preview-width (default 100)<\n>    maximum number of characters to preview<\n><\n>‚Ä¶/yay -> Ôêò master
cliphist -l       # listar historial
ls
nvim
z Di3go0-0_dots
nvim
chmod +x scripts/imagen.sh 
./scripts/imagen.sh
cd di3go0-0_dots/scripts/
./imagen.sh
sudo pacman -S jq<\n>
./imagen.sh
wlogout 
nvim
~/.config/wlogout/config<\n>
cd .config/
ls
cd wlogout/
ls
nano ~/.config/wlogout/config<\n>
wlogout --debug<\n>
wlogout --debug<\n>
wlogout -l ~/.config/wlogout/layout_1 -C ~/.config/wlogout/theme.css<\n>
wlogout -l ~/.config/wlogout/layout_1 -C ~/.config/wlogout/theme.css
nvim
wlogout -l ~/.config/wlogout/layout_1 -C ~/.config/wlogout/theme.css<\n>
nvim
wlogout -l ~/.config/wlogout/layout_2 -C ~/.config/wlogout/theme.css
z Di3go0-0_dots
cd scripts/
chmod +x grub.sh 
./grub.sh
nvim
cd di3go0-0_dots/
./scripts/grub.sh
nvim
cd di3go0-0_dots/
